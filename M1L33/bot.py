import telebot  # –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ telebot
from config import token  # –∏–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–∞

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–æ–º.")


@bot.message_handler(commands=['ban'])
def ban_user(message):
    if message.reply_to_message:
        chat_id = message.chat.id
        user_id = message.reply_to_message.from_user.id
        user_status = bot.get_chat_member(chat_id, user_id).status
        if user_status == 'administrator' or user_status == 'creator':
            bot.reply_to(message, "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        else:
            bot.ban_chat_member(chat_id, user_id)
            bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{message.reply_to_message.from_user.username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.")
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å.")


# üî• –ù–æ–≤—ã–π —Ö—ç–Ω–¥–ª–µ—Ä: –±–∞–Ω –∑–∞ —Å—Å—ã–ª–∫—É
@bot.message_handler(func=lambda message: True, content_types=['text', 'photo', 'video', 'document', 'audio', 'voice', 'video_note'])
def check_for_links(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    user_status = bot.get_chat_member(chat_id, user_id).status

    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –∫ –º–µ–¥–∏–∞
    text = message.text or message.caption

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç –∏ –≤ –Ω–µ–º –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞
    if text and ("http://" in text or "https://" in text or "t.me/" in text):
        if user_status not in ['administrator', 'creator']:
            try:
                username = message.from_user.username or message.from_user.first_name
                bot.ban_chat_member(chat_id, user_id)
                bot.reply_to(message, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å—Å—ã–ª–∫–∏.")
                print(f"–ó–∞–±–∞–Ω–µ–Ω: {username}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±–∞–Ω–µ: {e}")
@bot.message_handler(content_types=['new_chat_members'])
def welcome_new_member(message):
    for new_member in message.new_chat_members:
        bot.send_message(message.chat.id, f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {new_member.first_name}!")
        try:
            bot.approve_chat_join_request(message.chat.id, new_member.id)  # –¥–ª—è —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø —Å —Ä—É—á–Ω—ã–º –æ–¥–æ–±—Ä–µ–Ω–∏–µ–º
        except Exception as e:
            print(f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –Ω–µ –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è): {e}")

bot.infinity_polling(none_stop=True)
